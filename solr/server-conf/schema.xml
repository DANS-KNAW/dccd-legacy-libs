<?xml version="1.0" encoding="UTF-8" ?>

<schema name="easyDatasets" version="1.4">
	<!-- attribute "name" is the name of this schema and is only used for display purposes.
   	Applications should change this to reflect the nature of the search collection.
   	version="1.4" is Solr's version number for the schema syntax and semantics. It should
 	not normally be changed by applications.
 	1.0: multiValued attribute did not exist, all fields are multiValued by nature
 	1.1: multiValued attribute introduced, false by default
 	1.2: omitTermFreqAndPositions attribute introduced, true by default except for text fields.
 	1.3: removed optional field compress feature
 	1.4: default auto-phrase (QueryParser feature) to off
 	-->
  
  <types>
    <!-- The StrField type is not analyzed, but indexed/stored verbatim.  
       - StrField and TextField support an optional compressThreshold which
       limits compression (if enabled in the derived fields) to values which
       exceed a certain size (in characters).
    -->
    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>

    <!-- boolean type: "true" or "false" -->
    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" omitNorms="true"/>
    <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->
    <fieldtype name="binary" class="solr.BinaryField"/>

    <!--
      Default numeric field types. For faster range queries, consider the tint/tfloat/tlong/tdouble types.
    -->
    <fieldType name="int" class="solr.TrieIntField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
   
    <!--
     Numeric field types that index each value at various levels of precision
     to accelerate range queries when the number of values between the range
     endpoints is large. See the javadoc for NumericRangeQuery for internal
     implementation details.

     Smaller precisionStep values (specified in bits) will lead to more tokens
     indexed per value, slightly larger index size, and faster range queries.
     A precisionStep of 0 disables indexing at different precision levels.
    -->
    <fieldType name="tint" class="solr.TrieIntField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="tfloat" class="solr.TrieFloatField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="tlong" class="solr.TrieLongField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" omitNorms="true" positionIncrementGap="0"/>

    <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
         is a more restricted form of the canonical representation of dateTime
         http://www.w3.org/TR/xmlschema-2/#dateTime    
         The trailing "Z" designates UTC time and is mandatory.
         Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
         All other components are mandatory.

         Expressions can also be used to denote calculations that should be
         performed relative to "NOW" to determine the value, ie...

               NOW/HOUR
                  ... Round to the start of the current hour
               NOW-1DAY
                  ... Exactly 1 day prior to now
               NOW/DAY+6MONTHS+3DAYS
                  ... 6 months and 3 days in the future from the start of
                      the current day
                      
         Consult the DateField javadocs for more information.

         Note: For faster range queries, consider the tdate type
      -->
    <fieldType name="date_utc" class="solr.TrieDateField" omitNorms="true" precisionStep="0" positionIncrementGap="0"/>

    <!-- A Trie based date field for faster date range queries and date faceting. -->
    <fieldType name="tdate_utc" class="solr.TrieDateField" omitNorms="true" precisionStep="6" positionIncrementGap="0"/>

    <!-- The "RandomSortField" is not used to store or search any
         data.  You can declare fields of this type it in your schema
         to generate pseudo-random orderings of your docs for sorting 
         purposes.  The ordering is generated based on the field name 
         and the version of the index, As long as the index version
         remains unchanged, and the same field name is reused,
         the ordering of the docs will be consistent.  
         If you want different psuedo-random orderings of documents,
         for the same version of the index, use a dynamicField and
         change the name
     -->
    <fieldType name="random" class="solr.RandomSortField" indexed="true" />

    <!-- An english text field that uses WordDelimiterFilter to enable splitting and matching of
        words on case-change, alpha numeric boundaries, and non-alphanumeric chars,
        so that a query of "wifi" or "wi fi" could match a document containing "Wi-Fi".
        Synonyms and stopwords are customized by external files, and stemming is enabled.
        -->
    <fieldType name="text_en" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="false"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt"/>
      </analyzer>
    </fieldType>

    <!-- A dutch text field that uses WordDelimiterFilter to enable splitting and matching of
      words on case-change, alpha numeric boundaries, and non-alphanumeric chars,
      so that a query of "wifi" or "wi fi" could match a document containing "Wi-Fi".
      Synonyms and stopwords are customized by external files, and stemming is enabled.
    -->
    <fieldType name="text_nl" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.SnowballPorterFilterFactory" language="Dutch" />
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.SnowballPorterFilterFactory" language="Dutch" />
      </analyzer>
    </fieldType>
    

    <!-- A generic unstemmed text field - good if one does not know the language of the field -->
    <fieldType name="text" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>
    

    <!-- lowercases the entire field value, keeping it as a single token and making it usable for sorting  -->
    <fieldType name="text_sort" class="solr.TextField" positionIncrementGap="100" sortMissingLast="true" omitNorms="true">
      <analyzer>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory" />
        <filter class="solr.TrimFilterFactory" />
      </analyzer>
    </fieldType>


    <!-- since fields of this type are by default not stored or indexed,
         any data added to them will be ignored outright.  --> 
    <fieldtype name="ignored" stored="false" indexed="false" multiValued="true" class="solr.StrField" /> 

 </types>


 <fields>
   <!-- Valid attributes for fields:
     name: mandatory - the name for the field
     type: mandatory - the name of a previously defined type from the 
       <types> section
     indexed: true if this field should be indexed (searchable or sortable)
     stored: true if this field should be retrievable
     compressed: [false] if this field should be stored using gzip compression
       (this will only apply if the field type is compressable; among
       the standard field types, only TextField and StrField are)
     multiValued: true if this field may contain multiple values per document
     omitNorms: (expert) set to true to omit the norms associated with
       this field (this disables length normalization and index-time
       boosting for the field, and saves some memory).  Only full-text
       fields or fields that need an index-time boost need norms.
     termVectors: [false] set to true to store the term vector for a
       given field.
       When using MoreLikeThis, fields used for similarity should be
       stored for best performance.
     termPositions: Store position information with the term vector.  
       This will increase storage costs.
     termOffsets: Store offset information with the term vector. This 
       will increase storage costs.
     default: a value that should be used if no value is specified
       when adding a document.
   -->
   
   <!-- added by DANS-Solr.SolrSearchEngine -->
   <field name="type"           	type="string" indexed="true"  stored="true" required="true" multiValued="true" /> 
   
   <!-- RepoSearchBean -->
   <field name="sid"            	type="string" indexed="true"  stored="true" required="true" /> 
   <field name="repository_id"   	type="string" indexed="true"  stored="true" required="true" /> 
   
   <!-- DatasetSB-->
   <field name="ds_state"       	type="string" indexed="true" stored="true" />
   <field name="ds_accesscategory"      type="string" indexed="true" stored="true" />

   <field name="dc_title"       	type="text" indexed="true" stored="true" multiValued="true" />
   <field name="dc_title_s"  		type="text_sort" indexed="true" stored="true" omitNorms="true" />
   <field name="dc_description" 	type="text" indexed="true" stored="true" multiValued="true" />
   <field name="dc_creator"     	type="text" indexed="true" stored="true" multiValued="true" />
   <field name="dc_creator_s"  		type="text_sort" indexed="true" stored="true" omitNorms="true" />
   <field name="dc_subject"     	type="text" indexed="true" stored="true" multiValued="true" />
   <field name="dc_publisher"   	type="text" indexed="true" stored="true" multiValued="true" boost="0.9" />
   <field name="dc_publisher_s"   	type="text_sort" indexed="true" stored="true" omitNorms="true" />
   <field name="dc_contributor" 	type="text" indexed="true" stored="true" multiValued="true" boost="0.95" />
   <field name="dc_contributor_s" 	type="text_sort" indexed="true" stored="true" omitNorms="true" />
   <field name="dc_date"        	type="text" indexed="true" stored="true" multiValued="true" />
   <field name="dc_type"        	type="text" indexed="true" stored="true" multiValued="true" />
   <field name="dc_format"      	type="text" indexed="true" stored="true" multiValued="true" />
   <field name="dc_identifier"  	type="text" indexed="true" stored="true" multiValued="true" boost="0.8" />
   <field name="dc_source"      	type="text" indexed="true" stored="true" multiValued="true" boost="0.8" />
   <field name="dc_language"    	type="text" indexed="true" stored="true" multiValued="true" boost="0.8" />
   <field name="dc_relation"    	type="text" indexed="true" stored="true" multiValued="true" boost="0.8" />
   <field name="dc_coverage"    	type="text" indexed="true" stored="true" multiValued="true" />
   <field name="dc_rights"      	type="text" indexed="true" stored="true" multiValued="true" /> 
   
   <!-- EasyDatasetSB -->
   <field name="emd_date_draft_saved"           type="date_utc" indexed="true" stored="true" />
   <field name="emd_date_created"               type="date_utc" indexed="true" stored="true" />
   <field name="emd_date_created_formatted"     type="string" indexed="true" stored="true" />
   <field name="emd_date_available"             type="date_utc" indexed="true" stored="true" />
   <field name="emd_date_available_formatted"   type="string" indexed="true" stored="true" />
   <field name="emd_date_submitted"             type="date_utc" indexed="true" stored="true" />
   <field name="emd_date_published"             type="date_utc" indexed="true" stored="true" />
   <field name="emd_date_deleted"               type="date_utc" indexed="true" stored="true" />
   <field name="amd_assignee_id"                type="string" indexed="true" stored="true" />
   <field name="amd_depositor_id"               type="string" indexed="true" stored="true" />
   <field name="amd_workflow_progress"          type="int"    indexed="true" stored="true" />
   <field name="psl_permission_status"          type="text" indexed="true" stored="true" multiValued="true" />
   <field name="emd_audience"                   type="string" indexed="true" stored="true" multiValued="true" />
   <field name="archaeology_dc_subject"         type="string" indexed="true" stored="true" multiValued="true" />
   <field name="archaeology_dcterms_temporal"   type="string" indexed="true" stored="true" multiValued="true" />
   <field name="easy_collections"               type="string" indexed="true" stored="true" multiValued="true" />
   <field name="dai_creator"                    type="string" indexed="true" stored="true" multiValued="true" />
   <field name="dai_contributor"                type="string" indexed="true" stored="true" multiValued="true" />
 </fields>

 <!-- Field to use to determine and enforce document uniqueness. 
      Unless this field is marked with required="false", it will be a required field
   -->
 <uniqueKey>sid</uniqueKey>

 <defaultSearchField>dc_title</defaultSearchField>
 
<!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
 <solrQueryParser defaultOperator="AND"/>

</schema>
